{"mappings":"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","sources":["src/index.js","src/epiviz.gl/webgl-vis.js","src/epiviz.gl/mouse-reader.js","src/epiviz.gl/utilities.js","src/epiviz.gl/genome-sizes.js","src/epiviz.gl/svg-interactor.js","src/epiviz.gl/specification-validation/index.js","src/epiviz.gl/specification-validation/visualization.json","src/epiviz.gl/specification-validation/track.json","src/epiviz.gl/specification-validation/channel.json"],"sourcesContent":["import WebGLVis from \"./epiviz.gl/webgl-vis\";\n\nexport default WebGLVis;\n","import \"fpsmeter\";\nimport MouseReader from \"./mouse-reader\";\nimport isJSONValid from \"./specification-validation\";\nimport {\n  getDimAndMarginStyleForSpecification,\n  DEFAULT_HEIGHT,\n  DEFAULT_WIDTH,\n} from \"./utilities\";\n\nclass WebGLVis {\n  POSSIBLE_MOUSE_READER_OPTIONS = Object.freeze([\n    \"lockedX\",\n    \"lockedY\",\n    \"tool\",\n    \"viewport\",\n    \"currentXRange\",\n    \"currentYRange\",\n  ]);\n\n  /**\n   * A class meant to display a visualization based off a given specification using webgl.\n   *\n   * @param {HTMLElement} container <div> or other container element meant to contain the visualization and its mousereader\n   */\n  constructor(container) {\n    this.container = container;\n    this.mouseReader = new MouseReader(document.createElement(\"div\"), this);\n\n    this.parent = document.createElement(\"div\");\n    this.parent.style.position = \"relative\";\n    this.parent.style.overflow = \"hidden\";\n\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.style.position = \"absolute\";\n  }\n\n  /**\n   * Resize the canvas to a particular size and rerender the data\n   *\n   * @param {Number} width in pixels to resize the canvas to\n   * @param {Number} height in pixels to resize the canvas to\n   */\n  setCanvasSize(width, height) {\n    this.webglWorker.postMessage({\n      type: \"resize\",\n      width,\n      height,\n    });\n\n    this.canvas.style.width = width;\n    this.canvas.style.height = height;\n    this.mouseReader.width = width;\n    this.mouseReader.height = height;\n    this.sendDrawerState(this.mouseReader.getViewport());\n  }\n\n  /**\n   * This method does three things, and should only be called once. If changing the specification\n   * use setSpecification.\n   *  1. Add the canvas and mousereader to the DOM for use.\n   *  2. Creates the WebWorkers that render and process the data.\n   *  3. Exposes the messages the webworkers send back to the main thread under this.dataWorkerStream\n   *\n   * @param {Boolean} displayFPSMeter whether or not to display an fps meter\n   */\n  addToDom(displayFPSMeter) {\n    this.container.appendChild(this.parent);\n    this.parent.appendChild(this.canvas);\n    this.parent.appendChild(this.mouseReader.element);\n\n    if (displayFPSMeter) {\n      this.initFpsmeter();\n    }\n\n    const offscreenCanvas = this.canvas.transferControlToOffscreen();\n\n    this.webglWorker = new Worker(\n      new URL(\"offscreen-webgl-worker.js\", import.meta.url),\n      { type: \"module\" }\n    );\n    this.webglWorker.postMessage(\n      {\n        type: \"init\",\n        canvas: offscreenCanvas,\n        displayFPSMeter,\n      },\n      [offscreenCanvas]\n    );\n\n    // Allow OffScreenWebGLDrawer to tick FPS meter\n    this.webglWorker.onmessage = (e) => {\n      if (e.data.type === \"tick\") {\n        this.meter.tick();\n      }\n    };\n\n    this.dataWorkerStream = [];\n    this.dataWorker = new Worker(\n      new URL(\"data-processor-worker.js\", import.meta.url),\n      { type: \"module\" }\n    );\n    this.dataWorker.onmessage = (message) => {\n      this.dataWorkerStream.push(message);\n      this.parent.dispatchEvent(\n        new CustomEvent(\"onSelectionEnd\", { detail: message })\n      );\n      console.log(this.dataWorkerStream);\n    };\n\n    // Needs to be called at the end of addToDOM so mouseReader has correct dimensions to work with\n    this.mouseReader.init();\n  }\n\n  /**\n   * The main method for changing the state of the visualization, such as active tool,\n   * viewport, locking axis, or changing the zoom.\n   *\n   * The format of the options:\n   *   lockedX: boolean\n   *   lockedY: boolean\n   *   viewport: [minX, maxX, minY, maxY] (all Numbers)\n   *   currentXRange: [x1, x2] (Numbers that should be within the viewport minX and maxX)\n   *   currentYRange: [y1, y2] (Numbers that should be within the viewport minY and maxY)\n   *   tool: one of [\"pan\", \"box\", \"lasso\"]\n   *\n   * @param {Object} options with keys under WebGLVis.POSSIBLE_MOUSE_READER_OPTIONS\n   */\n  setViewOptions(options) {\n    for (const option of this.POSSIBLE_MOUSE_READER_OPTIONS) {\n      if (option in options) {\n        this.mouseReader[option] = options[option];\n      }\n    }\n    this.sendDrawerState(this.mouseReader.getViewport());\n  }\n\n  _setMargins(specification) {\n    const styles = getDimAndMarginStyleForSpecification(specification);\n    this.parent.style.width = specification.width || DEFAULT_WIDTH;\n    this.parent.style.height = specification.height || DEFAULT_HEIGHT;\n    this.canvas.style.width = styles.width;\n    this.canvas.style.height = styles.height;\n    this.canvas.style.margin = styles.margin;\n\n    if (isNaN(styles.width) || isNaN(styles.height)) {\n      // Using css calc\n      const canvasBox = this.canvas.getBoundingClientRect();\n      this.setCanvasSize(canvasBox.width, canvasBox.height);\n    } else {\n      this.setCanvasSize(styles.width, styles.height);\n    }\n  }\n\n  /**\n   * Set the specification of the visualization, and then render it.\n   *\n   * @param {Object} specification describing visualization\n   * @returns boolean on whether the specification was accepted\n   */\n  setSpecification(specification) {\n    if (!isJSONValid(specification)) {\n      return false;\n    }\n\n    this._setMargins(specification);\n    this.mouseReader.setSpecification(specification);\n    this.sendDrawerState(this.mouseReader.getViewport());\n    this.webglWorker.postMessage({ type: \"specification\", specification });\n    this.dataWorker.postMessage({ type: \"init\", specification });\n    return true;\n  }\n\n  /**\n   * Send the viewport to the drawer. Use setViewOptions to change the viewport.\n   *\n   * @param {Object} viewport likely from this.mouseReader.getViewport()\n   */\n  sendDrawerState(viewport) {\n    this.webglWorker.postMessage({ type: \"viewport\", ...viewport });\n  }\n\n  /**\n   * Calls render in the drawer.\n   */\n  forceDrawerRender() {\n    this.webglWorker.postMessage({\n      type: \"render\",\n      ...this.mouseReader.getViewport(),\n    });\n  }\n\n  /**\n   * Utility method to have data worker call {@link DataProcessor#selectBox} or\n   * {@link DataProcessor#selectLasso}.\n   *\n   * Does not return, posts result to this.dataWorkerStream.\n   * @param {Array} points array in format [x1,y1,x2,y2,x3,y3,...]\n   *  if points.length == 4, does a box select, if points.length >= 6 does a lasso select\n   *    using points as a polygon\n   */\n  selectPoints(points) {\n    if (points.length === 4) {\n      this.dataWorker.postMessage({ type: \"selectBox\", points });\n    } else if (points.length >= 6) {\n      this.dataWorker.postMessage({ type: \"selectLasso\", points });\n    }\n  }\n\n  /**\n   * Utility method to have data worker call {@link DataProcessor#getClosestPoint}.\n   * Does not return, posts result to this.dataWorkerStream.\n   *\n   * @param {Array} point to get closest point to\n   */\n  getClosestPoint(point) {\n    this.dataWorker.postMessage({ type: \"getClosestPoint\", point });\n  }\n\n  /**\n   * Initializes the FPS meter.\n   */\n  initFpsmeter() {\n    this.meter = new window.FPSMeter(document.querySelector(\"footer\"), {\n      graph: 1,\n      heat: 1,\n      theme: \"light\",\n      history: 25,\n      top: \"-20px\",\n      left: `100px`,\n      transform: \"translateX(-100%)\",\n    });\n  }\n\n  /**\n   * Adds an event listener to visualization on the appropriate component.\n   * Current event types that are supported are\n   * \"zoomIn\": fires when user zooms in\n   * \"zoomOut\": fires when user zooms out\n   * \"pan\": fires when user pans\n   * \"onSelection\": fires while user is changing the selection box/lasso\n   * \"onSelectionEnd\": fires when a selection has been completed and the results are in the dataWorkerStream\n   *\n   * For information on the parameters and functionality see:\n   *   https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   *\n   * @param {String} type\n   * @param {Function} listener\n   * @param {Object} options\n   */\n  addEventListener(type, listener, options) {\n    this.parent.addEventListener(type, listener, options);\n  }\n}\n\nexport default WebGLVis;\n","import {\n  scale,\n  getViewportForSpecification,\n  getDimAndMarginStyleForSpecification,\n} from \"./utilities\";\nimport SVGInteractor from \"./svg-interactor\";\n\n/**\n * event.layerX and event.layerY are deprecated. We will use them if they are on the event, but\n * if not we will use a manual calculation.\n *\n * @param {Event} event\n * @returns layerX and layerY, coordinates of event with origin at top right corner of bounding box\n */\nconst getLayerXandYFromEvent = (event) => {\n  if (event.layerX !== undefined && event.layerY !== undefined) {\n    return [event.layerX, event.layerY];\n  }\n  const bbox = event.target.getBoundingClientRect();\n  const x = event.clientX - bbox.left;\n  const y = event.clientY - bbox.top;\n  return [x, y];\n};\n\nclass MouseReader {\n  /**\n   *\n   * @param {HTMLElement} element meant to read mouse events, necessary since OffscreenCanvas cannot read DOM events\n   * @param {WebGLVis} handler WebGLVis that is using this mousereader\n   */\n  constructor(element, handler) {\n    this.element = element;\n    this.element.style.position = \"absolute\";\n    this.element.style.width = \"100%\";\n    this.element.style.height = \"100%\";\n\n    this.handler = handler;\n\n    this._currentSelectionPoints = [];\n\n    this.tool = \"pan\";\n\n    // Initializing elements to show user their current selection\n    this.SVGInteractor = new SVGInteractor(\n      document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\")\n    );\n  }\n\n  /**\n   * Set the specification of the mouse reader and the svg interaction\n   * @param {Object} specification\n   */\n  setSpecification(specification) {\n    const styles = getDimAndMarginStyleForSpecification(specification);\n    this.element.style.width = styles.width;\n    this.element.style.height = styles.height;\n    this.element.style.margin = styles.margin;\n\n    this.viewport = getViewportForSpecification(specification);\n    this.SVGInteractor.setSpecification(specification);\n    this._updateSVG();\n  }\n\n  /**\n   * Set the viewport in the format mouseReader.viewport = [minX, maxX, minY, maxY].\n   * Mostly used to make WebGLVis.setViewOptions simpler.\n   */\n  set viewport(toSet) {\n    this.minX = toSet[0];\n    this.maxX = toSet[1];\n    this.minY = toSet[2];\n    this.maxY = toSet[3];\n\n    this.currentXRange = [this.minX, this.maxX];\n    this.currentYRange = [this.minY, this.maxY];\n  }\n\n  /**\n   * Init the mouse reader by adding its elements to DOM and adding event handlers\n   */\n  init() {\n    this.width = this.element.clientWidth;\n    this.height = this.element.clientHeight;\n\n    this.element.parentElement.appendChild(this.SVGInteractor.svg);\n    this.SVGInteractor.init();\n    this._updateSVG();\n\n    this.element.addEventListener(\"wheel\", this._onWheel.bind(this), false);\n\n    let mouseDown = false;\n    this.element.addEventListener(\n      \"mousedown\",\n      (event) => {\n        mouseDown = true;\n        switch (this.tool) {\n          case \"pan\":\n            break;\n          case \"box\":\n          case \"lasso\":\n            this._currentSelectionPoints = [\n              ...this._calculateViewportSpot(...getLayerXandYFromEvent(event)),\n            ];\n            break;\n        }\n      },\n      false\n    );\n\n    this.element.addEventListener(\n      \"mousemove\",\n      (event) => {\n        if (!mouseDown) {\n          return;\n        }\n        switch (this.tool) {\n          case \"pan\":\n            this._onPan(event);\n            break;\n          case \"box\":\n            this._currentSelectionPoints = this._currentSelectionPoints\n              .slice(0, 2)\n              .concat(\n                this._calculateViewportSpot(...getLayerXandYFromEvent(event))\n              );\n            this.element.parentElement.dispatchEvent(\n              new CustomEvent(\"onSelection\", {\n                detail: {\n                  bounds: this._currentSelectionPoints,\n                  type: this.tool,\n                },\n              })\n            );\n            break;\n          case \"lasso\":\n            this._currentSelectionPoints.push(\n              ...this._calculateViewportSpot(...getLayerXandYFromEvent(event))\n            );\n            this.element.parentElement.dispatchEvent(\n              new CustomEvent(\"onSelection\", {\n                detail: {\n                  bounds: this._currentSelectionPoints,\n                  type: this.tool,\n                },\n              })\n            );\n            break;\n          case \"tooltip\":\n            break;\n        }\n        this._updateSVG();\n      },\n      false\n    );\n\n    this.element.addEventListener(\"mouseup\", (event) => {\n      mouseDown = false;\n      switch (this.tool) {\n        case \"pan\":\n          break;\n        case \"box\":\n          if (this._currentSelectionPoints.length !== 4) {\n            this._currentSelectionPoints = [];\n            return;\n          }\n          this._onSelect();\n          break;\n        case \"lasso\":\n          if (this._currentSelectionPoints.length < 6) {\n            this._currentSelectionPoints = [];\n            this._updateSVG();\n            return;\n          }\n          this._onSelect();\n          break;\n      }\n    });\n\n    this.element.addEventListener(\"mouseleave\", () => {\n      switch (this.tool) {\n        case \"pan\": // Ensures panning does not continue if user leaves canvas\n          mouseDown = false;\n          break;\n        case \"box\":\n          break;\n        case \"lasso\":\n          break;\n        case \"tooltip\":\n          break;\n      }\n    });\n  }\n\n  /**\n   * Get current viewport info such as min/max bounds and current ranges\n   *\n   * @returns Current viewport information the mouse reader has calculated\n   */\n  getViewport() {\n    return {\n      minX: this.minX,\n      maxX: this.maxX,\n      minY: this.minY,\n      maxY: this.maxY,\n      xRange: this.currentXRange,\n      yRange: this.currentYRange,\n    };\n  }\n\n  /**\n   * Method to handle wheel events for zooming in and out of canvas\n   *\n   * @param {WheelEvent} event\n   */\n  _onWheel(event) {\n    event.preventDefault();\n    if (!this.lockedX) {\n      const previousX = [...this.currentXRange]; // ... to avoid aliasing\n      const t = -event.wheelDelta / 1000;\n      const inDataSpace = this._calculateViewportSpot(\n        ...getLayerXandYFromEvent(event)\n      );\n      this.currentXRange[0] =\n        t * inDataSpace[0] + (1 - t) * this.currentXRange[0];\n\n      this.currentXRange[1] =\n        t * inDataSpace[0] + (1 - t) * this.currentXRange[1];\n\n      this.currentXRange[0] = Math.max(this.currentXRange[0], this.minX);\n      this.currentXRange[1] = Math.min(this.currentXRange[1], this.maxX);\n\n      if (!this._validateXRange()) {\n        // Zoom in limit\n        this.currentXRange = previousX;\n      }\n    }\n\n    if (!this.lockedY) {\n      const previousY = [...this.currentYRange];\n      const t = -event.wheelDelta / 1000;\n      const inDataSpace = this._calculateViewportSpot(\n        ...getLayerXandYFromEvent(event)\n      );\n\n      this.currentYRange[0] =\n        t * inDataSpace[1] + (1 - t) * this.currentYRange[0];\n      this.currentYRange[1] =\n        t * inDataSpace[1] + (1 - t) * this.currentYRange[1];\n      this.currentYRange[0] = Math.max(this.currentYRange[0], this.minY);\n      this.currentYRange[1] = Math.min(this.currentYRange[1], this.maxY);\n\n      if (!this._validateYRange()) {\n        // Zoom in limit\n        this.currentYRange = previousY;\n      }\n    }\n\n    this.element.parentElement.dispatchEvent(\n      new CustomEvent(event.wheelDelta < 0 ? \"zoomIn\" : \"zoomOut\", {\n        detail: {\n          viewport: this.getViewport(),\n          type: this.tool,\n        },\n      })\n    );\n\n    this.handler.sendDrawerState(this.getViewport());\n    this._updateSVG();\n  }\n\n  /**\n   * Method to handle a clicked mouse moving around canvas to pan around canvas.\n   *\n   * @param {MouseEvent} event from \"mousemove\" event\n   */\n  _onPan(event) {\n    if (!this.lockedX) {\n      const previousX = [...this.currentXRange]; // ... to avoid aliasing\n      const xDampen = (this.currentXRange[1] - this.currentXRange[0]) / 1000;\n      this.currentXRange[0] -= event.movementX * xDampen;\n      this.currentXRange[1] -= event.movementX * xDampen;\n      this.currentXRange[0] = Math.max(this.currentXRange[0], this.minX);\n      this.currentXRange[1] = Math.min(this.currentXRange[1], this.maxX);\n\n      if (!this._validateXRange()) {\n        this.currentXRange = previousX;\n      }\n    }\n\n    if (!this.lockedY) {\n      const previousY = [...this.currentYRange];\n      const yDampen = (this.currentYRange[1] - this.currentYRange[0]) / 1000;\n      this.currentYRange[0] += event.movementY * yDampen;\n      this.currentYRange[1] += event.movementY * yDampen;\n      this.currentYRange[0] = Math.max(this.currentYRange[0], this.minY);\n      this.currentYRange[1] = Math.min(this.currentYRange[1], this.maxY);\n\n      if (!this._validateYRange()) {\n        this.currentYRange = previousY;\n      }\n    }\n\n    this.element.parentElement.dispatchEvent(\n      new CustomEvent(\"pan\", {\n        detail: {\n          viewport: this.getViewport(),\n          type: this.tool,\n        },\n      })\n    );\n\n    this.handler.sendDrawerState(this.getViewport());\n    this._updateSVG();\n  }\n\n  /**\n   * Checks if this.currentXRange is valid with first element less than second\n   * and if viewport zoom is not above webgl max zoom.\n   *\n   * @return true if range is valid, false otherwise\n   */\n  _validateXRange() {\n    return this.currentXRange[1] >= this.currentXRange[0];\n  }\n\n  /**\n   * Checks if this.currentYRange is valid with first element less than second\n   * and if viewport zoom is not above webgl max zoom.\n   *\n   * @return true if range is valid, false otherwise\n   */\n  _validateYRange() {\n    return this.currentYRange[1] >= this.currentYRange[0];\n  }\n\n  /**\n   * Updates the DOM component used to show user selection or axis.\n   * Calls methods from SVGInteractor.\n   */\n  _updateSVG() {\n    this.SVGInteractor.updateView(\n      this.currentXRange,\n      this.currentYRange,\n      this.width,\n      this.height\n    );\n    this.SVGInteractor.updateSelectView(this._currentSelectionPoints);\n  }\n\n  /**\n   * Executes when user has confirmed selection points (typically by releasing mouse)\n   */\n  _onSelect() {\n    this.handler.selectPoints(this._currentSelectionPoints);\n  }\n\n  /**\n   * Calculate the location on the real coordinate space a point on the canvas corresponds to.\n   *\n   * @param {Float} canvasX likely from event.layerX or getLayerXandYFromEvent\n   * @param {Float} canvasY likely from event.layerY or getLayerXandYFromEvent\n   * @returns viewport coordinate as array\n   */\n  _calculateViewportSpot(canvasX, canvasY) {\n    const scaleX = scale([0, this.width], this.currentXRange);\n    // Flipped for Y since canvas using typical graphics coordinates but GPU clipspace is typical cartesian coordinates\n    const scaleY = scale([this.height, 0], this.currentYRange);\n    return [scaleX(canvasX), scaleY(canvasY)];\n  }\n}\n\nexport default MouseReader;\n","import { GenomeScale } from \"./genome-sizes\";\nimport { color } from \"d3-color\";\n\n/**\n * Returns a linear scale to map elements in domain to elements in range.\n * @param {Array} domain array of length two containing minimum and maximum values\n * @param {Array} range array of length two containing minimum and maximum values\n * @returns linear scale mapping domain to range\n */\nfunction scale(domain, range) {\n  const domainLength = domain[1] - domain[0];\n  const rangeLength = range[1] - range[0];\n  const slope = rangeLength / domainLength;\n  const intercept = range[1] - slope * domain[1];\n  return (x) => slope * x + intercept;\n}\n\n/**\n * Maps RGB values to integer for webgl buffer.\n *\n * @param {Integer} red value from 0 to 255\n * @param {Integer} green value from 0 to 255\n * @param {Integer} blue value from 0 to 255\n * @returns RGB hex value as integer\n */\nfunction rgbToHex(red, green, blue) {\n  return (red << 16) | (green << 8) | (blue << 0);\n}\n\nfunction rgbStringToHex(rgb) {\n  const colorVals = rgb.substring(4, rgb.length - 1).split(\",\");\n  return rgbToHex(...colorVals.map((asStr) => parseInt(asStr)));\n}\n\nfunction colorSpecifierToHex(specifier) {\n  if (!isNaN(specifier)) {\n    // Specifier is already a hex value\n    return Math.floor(specifier);\n  }\n  const asColor = color(specifier);\n  return rgbToHex(asColor.r, asColor.g, asColor.b);\n}\n\n/**\n * Get the VIEWPORT of the specification to be used by the mouseReader.\n * If all types for a dimension across tracks are categorical or genomic,\n * will default to [-1, 1] for that dimension for the mouseReader. If X or Y\n * has a fixed value, it will consider the width or height channel domains.\n *\n * @param {Object} specification of visualization\n * @returns [smallestX, largestX, smallestY, largestY] of viewport\n */\nfunction getViewportForSpecification(specification) {\n  let smallestX = Number.POSITIVE_INFINITY;\n  let largestX = Number.NEGATIVE_INFINITY;\n  let smallestY = Number.POSITIVE_INFINITY;\n  let largestY = Number.NEGATIVE_INFINITY;\n\n  specification.tracks.forEach((track) => {\n    let xDomain = track.x.domain;\n    if (\n      !xDomain &&\n      track.x.value !== undefined &&\n      track.width.domain !== undefined\n    ) {\n      xDomain = track.width.domain;\n    }\n    let yDomain = track.y.domain;\n    if (\n      !yDomain &&\n      track.y.value !== undefined &&\n      track.height &&\n      track.height.domain !== undefined\n    ) {\n      yDomain = track.height.domain;\n    }\n\n    if (xDomain) {\n      smallestX = xDomain[0] < smallestX ? xDomain[0] : smallestX;\n      largestX = xDomain[1] > largestX ? xDomain[1] : largestX;\n    }\n    if (yDomain) {\n      smallestY = yDomain[0] < smallestY ? yDomain[0] : smallestY;\n      largestY = yDomain[1] > largestY ? yDomain[1] : largestY;\n    }\n  });\n  smallestX = smallestX === Number.POSITIVE_INFINITY ? -1 : smallestX;\n  largestX = largestX === Number.NEGATIVE_INFINITY ? 1 : largestX;\n  smallestY = smallestY === Number.POSITIVE_INFINITY ? -1 : smallestY;\n  largestY = largestY === Number.NEGATIVE_INFINITY ? 1 : largestY;\n\n  return [smallestX, largestX, smallestY, largestY];\n}\n\n/**\n * Given a specification, return a SCALE to be used for mapping data points to clip space\n * for the drawer.\n *\n * @param {String} dimension either x or y\n * @param {Object} specification for the visualization\n * @returns function which can be used to map to an \"x\" or \"y\" value\n */\nconst getScaleForSpecification = (dimension, specification) => {\n  if (dimension !== \"x\" && dimension !== \"y\") {\n    console.error(`${dimension} is not x or y!`);\n  }\n  let genomic = false;\n  let genome;\n  for (const track of specification.tracks) {\n    if (track[dimension].type && track[dimension].type.includes(\"genomic\")) {\n      genome = track[dimension].genome;\n      genomic = true;\n      break;\n    }\n  }\n\n  if (!genomic) {\n    const viewport = getViewportForSpecification(specification);\n    if (dimension === \"x\") {\n      return scale([viewport[0], viewport[1]], [-1, 1]);\n    }\n    return scale([viewport[2], viewport[3]], [-1, 1]);\n  }\n\n  const geneScale = GenomeScale.completeScale(genome);\n\n  let smallestGene = undefined;\n  let smallestGeneValue = Number.POSITIVE_INFINITY;\n  let largestGene = undefined;\n  let largestGeneValue = Number.NEGATIVE_INFINITY;\n\n  for (const track of specification.tracks) {\n    let xDomain = track[dimension].domain;\n    if (xDomain) {\n      if (geneScale.toClipSpaceFromString(xDomain[0]) < smallestGeneValue) {\n        smallestGeneValue = geneScale.toClipSpaceFromString(xDomain[0]);\n        smallestGene = xDomain[0];\n      }\n\n      if (geneScale.toClipSpaceFromString(xDomain[1]) > largestGeneValue) {\n        largestGeneValue = geneScale.toClipSpaceFromString(xDomain[1]);\n        largestGene = xDomain[1];\n      }\n    }\n  }\n\n  const asScale = new GenomeScale(genome, [smallestGene, largestGene]);\n  return asScale.toCallable();\n};\n\nconst RELATIVE_LENGTH_UNITS = [\n  \"em\",\n  \"ex\",\n  \"ch\",\n  \"rem\",\n  \"lh\",\n  \"vw\",\n  \"vh\",\n  \"vmin\",\n  \"vmax\",\n  \"%\",\n];\nconst getPixelMeasurement = (cssMeasurement) => {\n  if (RELATIVE_LENGTH_UNITS.some((unit) => cssMeasurement.includes(unit))) {\n    return false;\n  }\n  const asFloat = parseFloat(cssMeasurement);\n  return isNaN(asFloat) ? false : asFloat;\n};\n\nconst DEFAULT_MARGIN = \"50px\";\nconst DEFAULT_WIDTH = \"100%\";\nconst DEFAULT_HEIGHT = DEFAULT_WIDTH;\nconst getDimAndMarginStyleForSpecification = (specification) => {\n  let toReturn = {};\n  const calculatedMargins = {};\n  if (specification.margins === undefined) {\n    toReturn.margin = DEFAULT_MARGIN;\n    calculatedMargins.top = DEFAULT_MARGIN;\n    calculatedMargins.right = DEFAULT_MARGIN;\n    calculatedMargins.bottom = DEFAULT_MARGIN;\n    calculatedMargins.left = DEFAULT_MARGIN;\n  } else {\n    calculatedMargins.top =\n      specification.margins.top === undefined\n        ? DEFAULT_MARGIN\n        : specification.margins.top;\n    calculatedMargins.right =\n      specification.margins.right === undefined\n        ? DEFAULT_MARGIN\n        : specification.margins.right;\n    calculatedMargins.bottom =\n      specification.margins.bottom === undefined\n        ? DEFAULT_MARGIN\n        : specification.margins.bottom;\n    calculatedMargins.left =\n      specification.margins.left === undefined\n        ? DEFAULT_MARGIN\n        : specification.margins.left;\n    // Shorthand for top right bottom left\n    toReturn.margin = `${calculatedMargins.top}\n                       ${calculatedMargins.right}\n                       ${calculatedMargins.bottom}\n                       ${calculatedMargins.left}`;\n  }\n\n  const calculatedWidth = specification.width || DEFAULT_WIDTH;\n  const calculatedHeight = specification.height || DEFAULT_HEIGHT;\n  const allMeasurements = [\n    calculatedMargins.top,\n    calculatedMargins.right,\n    calculatedMargins.bottom,\n    calculatedMargins.left,\n    calculatedWidth,\n    calculatedHeight,\n  ];\n\n  if (allMeasurements.every(getPixelMeasurement)) {\n    // Let's encode as a number to allow users using typescript or doing weird DOM things able to define\n    // the width and height explicitly\n    toReturn.width =\n      getPixelMeasurement(calculatedWidth) -\n      getPixelMeasurement(calculatedMargins.left) -\n      getPixelMeasurement(calculatedMargins.right);\n    toReturn.height =\n      getPixelMeasurement(calculatedHeight) -\n      getPixelMeasurement(calculatedMargins.bottom) -\n      getPixelMeasurement(calculatedMargins.top);\n  } else {\n    // If user is using css units in their margins and dimensions, then use css calc\n    toReturn.width = `calc(\n      ${calculatedWidth} - \n      ${calculatedMargins.left} - \n      ${calculatedMargins.right}\n    )`;\n\n    toReturn.height = `calc(\n      ${calculatedHeight} - \n      ${calculatedMargins.top} - \n      ${calculatedMargins.bottom}\n    )`;\n  }\n  return toReturn;\n};\n\n/**\n * We need to calculate points on the arc for that mark type, but it needs to be quick.\n * In addition, it shouldn't be a perfect circle, and also should look somewhat arc like.\n * This utility funciton returns function that takes a value between 0 and 1 where 0 maps\n * to the first control point, and 1 maps to the third control point.\n *\n * https://math.stackexchange.com/a/1361717\n *\n * @param {Array} P0 first control point\n * @param {Array} P1 second control point\n * @param {Array} P2 third control point\n * @returns a function [0, 1] -> point on curve\n */\nconst getQuadraticBezierCurveForPoints = (P0, P1, P2) => {\n  const x = (t) =>\n    (1 - t) ** 2 * P0[0] + 2 * t * (1 - t) * P1[0] + t ** 2 * P2[0];\n  const y = (t) =>\n    (1 - t) ** 2 * P0[1] + 2 * t * (1 - t) * P1[1] + t ** 2 * P2[1];\n  return (t) => [x(t), y(t)];\n};\n\nexport {\n  scale,\n  rgbToHex,\n  rgbStringToHex,\n  getViewportForSpecification,\n  colorSpecifierToHex,\n  getScaleForSpecification,\n  getDimAndMarginStyleForSpecification,\n  getQuadraticBezierCurveForPoints,\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n};\n","import { scale } from \"./utilities\";\nimport { format, precisionRound } from \"d3-format\";\n\n/**\n * Create a function which maps a genome pair to a location in the entire genome\n *\n * @param {String} genomeId key from genomeSizes object\n * @returns a function which maps a (chrId, pairNum) => to\n *  a number between 1 and total number of genes in the genome\n */\nconst createPairMapperToGenome = (genomeId) => {\n  let chrSizes = genomeSizes[genomeId];\n\n  let chrStarts = new Map();\n  let cumulativeTotal = 0;\n  chrSizes.forEach((value, key) => {\n    chrStarts.set(key, cumulativeTotal);\n    cumulativeTotal += value;\n  });\n\n  return (chr, pairNum) => {\n    return chrStarts.get(chr) + pairNum;\n  };\n};\n\nclass GenomeScale {\n  /**\n   * A scale used to map a genome pair to a location between -1 and 1 for data visualization.\n   * Also contains inverse and utility functions for getting labels for axis.\n   *\n   * @param {String} genomeId key from genomeSizes object\n   * @param {Array} domain array of length 2 containing the start and end of the genome\n   *   for the scale. ex: [\"chr2:1000\", \"chr3:2000\"]\n   */\n  constructor(genomeId, domain) {\n    if (genomeSizes[genomeId] === undefined) {\n      console.error(`${genomeId} is not a recognized genome!`);\n    }\n    this.genomeId = genomeId;\n    this.domain = domain;\n\n    let [startChr, startPair] = domain[0]\n      .substring(3) // Remove chr\n      .split(\":\"); // split chromesome and pair number\n    startPair = parseInt(startPair);\n\n    let [endChr, endPair] = domain[1].substring(3).split(\":\");\n    endPair = parseInt(endPair);\n\n    this.mapPairToGenomeIndex = createPairMapperToGenome(genomeId);\n    const firstPairInDomain = this.mapPairToGenomeIndex(startChr, startPair);\n    const lastPairInDomain = this.mapPairToGenomeIndex(endChr, endPair);\n    this.mapGenomeIndexToClipSpace = scale(\n      [firstPairInDomain, lastPairInDomain],\n      [-1, 1]\n    );\n    this.mapGenomeIndexToClipSpaceInverse = scale(\n      [-1, 1],\n      [firstPairInDomain, lastPairInDomain]\n    );\n  }\n\n  /**\n   * Map a genome pair to [-1, 1] with the parts.\n   *\n   * @param {String} chr id of chromosome in genome\n   * @param {Number} pair location in chromosome\n   * @returns value in [-1, 1] corresponding to genome range location\n   */\n  toClipSpaceFromParts(chr, pair) {\n    return this.mapGenomeIndexToClipSpace(this.mapPairToGenomeIndex(chr, pair));\n  }\n\n  /**\n   * Utility method for calling this.toClipSpaceFromParts.\n   *\n   * @param {String} pairStr in form \"chrID:geneNumber\" ex: \"chr1:1000\"\n   * @returns value in [-1, 1] corresponding to genome range location\n   */\n  toClipSpaceFromString(pairStr) {\n    let [chr, pair] = pairStr.substring(3).split(\":\");\n    pair = parseInt(pair);\n    return this.toClipSpaceFromParts(chr, pair);\n  }\n\n  /**\n   * Get the gene id from a value between [-1, 1]\n   *\n   * @param {Number} num number between [-1, 1]\n   * @param {String} formatting used for formatting gene number with d3-format\n   * @returns `chr${chrId}:${chrLoc}`\n   */\n  inverse(num, formatting = false) {\n    let genomeSpot = Math.floor(this.mapGenomeIndexToClipSpaceInverse(num));\n    let chrId;\n    let chrLoc;\n    let cumulativeTotal = 0;\n    for (const [chrKey, pairCount] of genomeSizes[this.genomeId].entries()) {\n      if (cumulativeTotal + pairCount >= genomeSpot) {\n        chrLoc = genomeSpot - cumulativeTotal;\n        chrId = chrKey;\n        break;\n      }\n      cumulativeTotal += pairCount;\n    }\n\n    return formatting\n      ? `chr${chrId}:${format(formatting)(chrLoc)}`\n      : `chr${chrId}:${chrLoc}`;\n  }\n\n  getMidpoint(chr1, gene1, chr2, gene2) {\n    const x1 = this.toClipSpaceFromParts(chr1, gene1);\n    const x2 = this.toClipSpaceFromParts(chr2, gene2);\n    const middleGene = this.inverse((x1 + x2) / 2);\n    const [chrId, gene] = middleGene.substring(3).split(\":\");\n    return [chrId, parseInt(gene)];\n  }\n\n  /**\n   * Get a sequence of ticks for a range in the genome.\n   *\n   * @param {Number} start number between [-1, 1]\n   * @param {Number} end number between [-1, 1] > start\n   * @returns object with tickCoords and corresponding tickLabels property\n   */\n  getTickCoordsAndLabels(start, end) {\n    let [startChr, startPair] = this.inverse(start).substring(3).split(\":\");\n    let [endChr, endPair] = this.inverse(end).substring(3).split(\":\");\n\n    const toReturn = [];\n    let suggestedFormat;\n    if (startChr === endChr) {\n      let difference = endPair - startPair;\n      let magnitude = Math.floor(Math.log10(difference));\n      let startingValue = startPair - (startPair % 10 ** magnitude);\n      suggestedFormat = precisionRound(10 ** magnitude, startingValue);\n\n      for (\n        let currValue = startingValue;\n        currValue < endPair;\n        currValue += 10 ** magnitude\n      ) {\n        toReturn.push(this.toClipSpaceFromParts(startChr, currValue));\n      }\n    } else {\n      suggestedFormat = \"1\";\n      for (const chrId of genomeSizes[this.genomeId].keys()) {\n        toReturn.push(this.toClipSpaceFromParts(chrId, 1));\n      }\n    }\n    return {\n      tickCoords: toReturn,\n      tickLabels: toReturn.map((coord) =>\n        this.inverse(coord, format(`.${suggestedFormat}s`))\n      ),\n    };\n  }\n\n  toCallable() {\n    // TODO investigate if using this method in the vertex calculator leads to slow downs\n    const func = (args) => {\n      return this.toClipSpaceFromParts(args[0], args[1]);\n    };\n    func.isGenomeScale = true;\n    func.mapGenomeIndexToClipSpaceInverse =\n      this.mapGenomeIndexToClipSpaceInverse.bind(this);\n    func.getMidpoint = this.getMidpoint.bind(this);\n    func.getTickCoordsAndLabels = this.getTickCoordsAndLabels.bind(this);\n    return func;\n  }\n\n  /**\n   * Utility method for getting a GenomeScale across an entire genome.\n   *\n   * @param {String} genomeId from genomeSizes\n   * @returns a GenomeScale across an entire genome\n   */\n  static completeScale(genomeId) {\n    const chrSizes = genomeSizes[genomeId];\n    const finalEntry = [...chrSizes.entries()][chrSizes.size - 1];\n\n    return new GenomeScale(genomeId, [\n      \"chr1:1\",\n      `chr${finalEntry[0]}:${finalEntry[1]}`,\n    ]);\n  }\n}\n\n/**\n * Available genomes to visualize. Each genome is a map from chromosome id to number of genes in chromosome.\n * Order matters as maps remember insertion order.\n */\nconst genomeSizes = {\n  hg38: new Map([\n    [\"1\", 248956422], // chr1\n    [\"2\", 242193529], // chr2\n    [\"3\", 198295559], // ...\n    [\"4\", 190214555],\n    [\"5\", 181538259],\n    [\"6\", 170805979],\n    [\"7\", 159345973],\n    [\"8\", 145138636],\n    [\"9\", 138394717],\n    [\"10\", 135086622],\n    [\"11\", 133797422],\n    [\"12\", 133275309],\n    [\"13\", 114364328],\n    [\"14\", 107043718],\n    [\"15\", 101991189],\n    [\"16\", 90338345],\n    [\"17\", 83257441],\n    [\"18\", 80373285],\n    [\"19\", 58617616],\n    [\"20\", 64444167], // ...\n    [\"21\", 46709983], // chr21\n    [\"22\", 50818468], // chr22\n    [\"X\", 156040895], // chrX\n    [\"Y\", 57227415], // chrY\n  ]),\n\n  hg19: new Map([\n    [\"1\", 249250621], // chr1\n    [\"2\", 243199373], // chr2\n    [\"3\", 198022430], // ...\n    [\"4\", 191154276],\n    [\"5\", 180915260],\n    [\"6\", 171115067],\n    [\"7\", 159138663],\n    [\"8\", 146364022],\n    [\"9\", 141213431],\n    [\"10\", 135534747],\n    [\"11\", 135006516],\n    [\"12\", 133851895],\n    [\"13\", 115169878],\n    [\"14\", 107349540],\n    [\"15\", 102531392],\n    [\"16\", 90354753],\n    [\"17\", 81195210],\n    [\"18\", 78077248],\n    [\"19\", 59128983],\n    [\"20\", 63025520], // ...\n    [\"21\", 48129895], // chr21\n    [\"22\", 51304566], // chr22\n    [\"X\", 155270560], // chrX\n    [\"Y\", 59373566], // chrY\n  ]),\n\n  mm9: new Map([\n    [\"1\", 197195432],\n    [\"2\", 181748087],\n    [\"3\", 159599783],\n    [\"4\", 155630120],\n    [\"5\", 152537259],\n    [\"6\", 149517037],\n    [\"7\", 152524553],\n    [\"8\", 131738871],\n    [\"9\", 124076172],\n    [\"10\", 129993255],\n    [\"11\", 121843856],\n    [\"12\", 121257530],\n    [\"13\", 120284312],\n    [\"14\", 125194864],\n    [\"15\", 103494974],\n    [\"16\", 98319150],\n    [\"17\", 95272651],\n    [\"18\", 90772031],\n    [\"19\", 61342430],\n    [\"X\", 166650296],\n    [\"Y\", 15902555],\n  ]),\n\n  mm10: new Map([\n    [\"1\", 195471971],\n    [\"2\", 182113224],\n    [\"3\", 160039680],\n    [\"4\", 156508116],\n    [\"5\", 151834684],\n    [\"6\", 149736546],\n    [\"7\", 145441459],\n    [\"8\", 129401213],\n    [\"9\", 124595110],\n    [\"10\", 130694993],\n    [\"11\", 122082543],\n    [\"12\", 120129022],\n    [\"13\", 120421639],\n    [\"14\", 124902244],\n    [\"15\", 104043685],\n    [\"16\", 98207768],\n    [\"17\", 94987271],\n    [\"18\", 90702639],\n    [\"19\", 61431566],\n    [\"X\", 171031299],\n    [\"Y\", 91744698],\n  ]),\n\n  mm39: new Map([\n    [\"1\", 195154279], // chr1\n    [\"2\", 181755017], // chr2\n    [\"3\", 159745316], // ...\n    [\"4\", 156860686],\n    [\"5\", 151758149],\n    [\"6\", 149588044],\n    [\"7\", 144995196],\n    [\"8\", 130127694],\n    [\"9\", 124359700],\n    [\"10\", 130530862],\n    [\"11\", 121973369],\n    [\"12\", 120092757],\n    [\"13\", 120883175],\n    [\"14\", 125139656],\n    [\"15\", 104073951],\n    [\"16\", 98008968],\n    [\"17\", 95294699], // ...\n    [\"18\", 90720763], // chr18\n    [\"19\", 61420004], // chr19\n    [\"X\", 169476592], // chrX\n    [\"Y\", 91455967], // chrY\n  ]),\n};\n\nexport { genomeSizes, GenomeScale };\n","import {\n  scale,\n  getScaleForSpecification,\n  getDimAndMarginStyleForSpecification,\n} from \"./utilities\";\n\nimport { axisBottom, axisLeft, axisTop, axisRight } from \"d3-axis\";\nimport { scaleLinear } from \"d3-scale\";\nimport { select } from \"d3-selection\";\n\nclass SVGInteractor {\n  /**\n   * A class used to illustrate state of the visualization on the main thread such as\n   * selection or axis.\n   *\n   * @param {SVGElement} svg container for all svg elements\n   */\n  constructor(svg) {\n    this.svg = svg;\n    this.d3SVG = select(this.svg);\n    this.svg.style.width = \"100%\";\n    this.svg.style.height = \"100%\";\n    this.svg.style.position = \"absolute\";\n    this.svg.style.zIndex = \"1000\";\n    this.svg.style.pointerEvents = \"none\";\n    this.svg.style.overflow = \"visible\";\n\n    this._selectMarker = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"polygon\"\n    );\n    this._selectMarker.setAttribute(\"fill\", \"rgba(124, 124, 247, 0.3)\");\n    this._selectMarker.setAttribute(\"stroke\", \"rgb(136, 128, 247)\");\n    this._selectMarker.setAttribute(\"stroke-width\", 1);\n    this._selectMarker.setAttribute(\"stroke-dasharray\", \"5,5\");\n\n    this._labelMarker = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"g\"\n    );\n  }\n\n  /**\n   * Set the specification for this class to refer to.\n   *\n   * @param {Object} specification\n   */\n  setSpecification(specification) {\n    this.specification = specification;\n\n    const styles = getDimAndMarginStyleForSpecification(specification);\n    this.svg.style.width = styles.width;\n    this.svg.style.height = styles.height;\n    this.svg.style.margin = styles.margin;\n\n    this.initialX = undefined; // used for updating labels\n    this.initialY = undefined;\n    select(this._labelMarker).selectAll(\"*\").remove();\n    for (const _ of this.specification.labels || []) {\n      select(this._labelMarker).append(\"text\");\n    }\n  }\n\n  /**\n   * Add svg elements to the DOM\n   */\n  init() {\n    this.svg.appendChild(this._selectMarker);\n    this.svg.appendChild(this._labelMarker);\n    this.xAxisAnchor = this.d3SVG.append(\"g\");\n    this.yAxisAnchor = this.d3SVG.append(\"g\");\n  }\n\n  /**\n   * Update the svg using the new viewport information\n   * @param {Array} currentXRange of mousereader\n   * @param {Array} currentYRange of mousereader\n   * @param {Number} width of mousereader\n   * @param {Number} height of mousereader\n   */\n  updateView(currentXRange, currentYRange, width, height) {\n    this.currentXRange = currentXRange;\n    this.currentYRange = currentYRange;\n    this.width = width;\n    this.height = height;\n\n    if (this.currentXRange) {\n      this.xAxis = this._calculateAxis(\n        \"x\",\n        this.specification.xAxis,\n        this.specification,\n        getScaleForSpecification(\"x\", this.specification),\n        this.xAxisAnchor\n      );\n\n      if (this.specification.labels) {\n        this.updateLabels();\n      }\n    }\n\n    if (this.xAxis) {\n      this.xAxisAnchor.call(this.xAxis);\n    }\n\n    if (this.currentYRange) {\n      this.yAxis = this._calculateAxis(\n        \"y\",\n        this.specification.yAxis,\n        this.specification,\n        getScaleForSpecification(\"y\", this.specification),\n        this.yAxisAnchor\n      );\n    }\n\n    if (this.yAxis) {\n      this.yAxisAnchor.call(this.yAxis);\n    }\n  }\n\n  updateLabels() {\n    if (!this.initialX && this.specification.labels) {\n      this.initialX = this.specification.labels.map(\n        (label) => this._calculateViewportSpotInverse(label.x, label.y)[0]\n      );\n    }\n    if (!this.initialY && this.specification.labels) {\n      this.initialY = this.specification.labels.map(\n        (label) => this._calculateViewportSpotInverse(label.x, label.y)[1]\n      );\n    }\n\n    select(this._labelMarker)\n      .selectAll(\"text\")\n      .data(this.specification.labels)\n      .text((d) => d.text)\n      .attr(\"x\", (d, i) => {\n        if (d.fixedX) {\n          return this.initialX[i];\n        }\n        return this._calculateViewportSpotInverse(d.x, d.y)[0];\n      })\n      .attr(\"y\", (d, i) => {\n        if (d.fixedY) {\n          return this.initialY[i];\n        }\n        return this._calculateViewportSpotInverse(d.x, d.y)[1];\n      })\n      .each(function (d) {\n        // Set any possible svg properties specified in label\n        for (const property in d) {\n          if ([\"x\", \"y\", \"text\"].includes(property)) {\n            continue;\n          }\n          select(this).attr(property, d[property]);\n        }\n      });\n  }\n\n  _calculateAxis(dimension, orientation, specification, genomeScale, anchor) {\n    let axis, domain, range;\n    if (dimension === \"x\") {\n      domain = this.currentXRange;\n      range = [0, this.width];\n      switch (orientation) {\n        case \"none\":\n          anchor.attr(\"transform\", `translate(-1000000, -1000000)`);\n          return null;\n        case \"top\":\n          axis = axisTop();\n          anchor.attr(\"transform\", `translate(0, 0)`);\n          break;\n        case \"center\":\n          axis = axisBottom();\n          anchor.attr(\"transform\", `translate(0, ${this.height / 2})`);\n          break;\n        case \"zero\":\n          const yScale = scaleLinear()\n            .domain(this.currentYRange)\n            .range([this.height, 0]);\n\n          axis = axisBottom();\n          anchor.attr(\"transform\", `translate(0, ${yScale(0)})`);\n          break;\n        case \"bottom\":\n        default:\n          axis = axisBottom();\n          anchor.attr(\"transform\", `translate(0, ${this.height})`);\n          break;\n      }\n    }\n\n    if (dimension === \"y\") {\n      domain = this.currentYRange;\n      range = [this.height, 0];\n      switch (orientation) {\n        case \"none\":\n          anchor.attr(\"transform\", `translate(-1000000, -1000000)`);\n          return null;\n        case \"center\":\n          axis = axisRight();\n          anchor.attr(\"transform\", `translate(${this.width / 2}, 0)`);\n          break;\n        case \"right\":\n          axis = axisRight();\n          anchor.attr(\"transform\", `translate(${this.width}, 0)`);\n          break;\n        case \"zero\":\n          const xScale = scaleLinear()\n            .domain(this.currentXRange)\n            .range([0, this.width]);\n\n          axis = axisLeft();\n          anchor.attr(\"transform\", `translate(${xScale(0)}, 0)`);\n          break;\n        case \"left\": // left is default behavior\n        default:\n          axis = axisLeft();\n          anchor.attr(\"transform\", `translate(0, 0)`);\n          break;\n      }\n    }\n\n    let genomic = false;\n    for (const track of specification.tracks) {\n      if (track[dimension].type && track[dimension].type.includes(\"genomic\")) {\n        genomic = true;\n      }\n    }\n\n    if (!genomic) {\n      return axis.scale(scaleLinear().domain(domain).range(range));\n    }\n\n    let tickInfo;\n    if (dimension === \"x\") {\n      tickInfo = genomeScale.getTickCoordsAndLabels(domain[0], domain[1]);\n    } else {\n      tickInfo = genomeScale.getTickCoordsAndLabels(range[0], range[1]);\n    }\n\n    return axis\n      .scale(scaleLinear().domain(domain).range(range))\n      .tickValues(tickInfo.tickCoords)\n      .tickFormat((_, index) => tickInfo.tickLabels[index]);\n  }\n\n  /**\n   * Updates user selection view if they have selected a box\n   */\n  _updateBoxSelectView(points) {\n    if (points.length !== 4) {\n      return;\n    }\n\n    const topLeftCorner = this._calculateViewportSpotInverse(\n      points[0],\n      points[1]\n    );\n\n    const bottomRightCorner = this._calculateViewportSpotInverse(\n      points[2],\n      points[3]\n    );\n\n    let pointAttr = `${topLeftCorner[0]},${topLeftCorner[1]} \n                     ${topLeftCorner[0]},${bottomRightCorner[1]}, \n                     ${bottomRightCorner[0]},${bottomRightCorner[1]}\n                     ${bottomRightCorner[0]},${topLeftCorner[1]}\n                     `;\n\n    this._selectMarker.setAttribute(\"points\", pointAttr);\n  }\n\n  /**\n   * Update the selection box/lasso with the points as bounds\n   *\n   * @param {Array} points 1D array of coordinates that are used for selection ex. [x1,y1,x2,y2,...]\n   */\n  updateSelectView(points) {\n    if (points.length === 4) {\n      this._updateBoxSelectView(points);\n      return;\n    }\n    if (points.length < 6) {\n      this._selectMarker.setAttribute(\"points\", \"\");\n      return;\n    }\n\n    let pointAttr = \"\";\n    for (let i = 0; i < points.length; i += 2) {\n      const asCanvasPoint = this._calculateViewportSpotInverse(\n        points[i],\n        points[i + 1]\n      );\n      pointAttr += `${asCanvasPoint[0]}, ${asCanvasPoint[1]} `;\n    }\n\n    this._selectMarker.setAttribute(\"points\", pointAttr);\n  }\n\n  /**\n   * Calculate the location on the canvas a real coordniate corresponds to.\n   *\n   * @param {Float} viewportX x coordinate of data space\n   * @param {Float} viewportY y coordniate of data space\n   * @returns canvas coordindate as array\n   */\n  _calculateViewportSpotInverse(viewportX, viewportY) {\n    const inverseScaleX = scale(this.currentXRange, [0, this.width]);\n    // Flipped for Y since canvas using typical graphics coordinates but GPU clipspace is typical cartesian coordinates\n    const inverseScaleY = scale(this.currentYRange, [this.height, 0]);\n\n    return [inverseScaleX(viewportX), inverseScaleY(viewportY)];\n  }\n}\n\nexport default SVGInteractor;\n","import { Validator } from \"jsonschema\";\nimport visualization from \"./visualization.json\";\nimport track from \"./track.json\";\nimport channel from \"./channel.json\";\n\nconst v = new Validator();\nv.addSchema(channel, \"/channel\");\nv.addSchema(track, \"/track\");\n\n/**\n * Utility method that returns a boolean on whether the json is a valid specification.\n * console.errors the reason if it is not.\n * @param {Object} json specification\n * @returns boolean\n */\nconst isJSONValid = (json) => {\n  const validation = v.validate(json, visualization);\n  if (!validation.valid) {\n    console.error(validation.errors);\n  }\n  return validation.valid;\n};\n\nexport default isJSONValid;\n\nexport { channel, track, visualization };\n","{\n  \"schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"id\": \"/visualization\",\n  \"title\": \"Visualization\",\n  \"description\": \"A webgl visualization made of a sequence of tracks\",\n  \"type\": \"object\",\n  \"required\": [\"tracks\"],\n  \"properties\": {\n    \"labels\": {\n      \"description\": \"set of labels to display on visualization, properties of labels can be any valid attribute for an svg text element\",\n      \"examples\": [\n        {\n          \"x\": 100,\n          \"y\": 200,\n          \"text\": \"my favorite data point\",\n          \"rotate\": -90\n        },\n        {\n          \"x\": -1.1,\n          \"y\": 0,\n          \"text\": \"Track 1\",\n          \"color\": \"red\",\n          \"fixedX\": true\n        }\n      ],\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"x\": {\n            \"description\": \"x coordinate of label with respect to data coordinates, should be on scale with [-1, 1] if x dimension is categorical or genomic\",\n            \"type\": \"number\"\n          },\n          \"y\": {\n            \"description\": \"y coordinate of label with respect to data coordinates, should be on scale with [-1, 1] if y dimension is categorical or genomic\",\n            \"type\": \"number\"\n          },\n          \"fixedX\": {\n            \"description\": \"fix the x coordinate of the label, so it does not move when panning/zooming left or right\",\n            \"type\": \"boolean\"\n          },\n          \"fixedY\": {\n            \"description\": \"fix the y coordinate of the label, so it does not move when panning/zooming up or down\",\n\n            \"type\": \"boolean\"\n          },\n          \"required\": [\"x\", \"y\"]\n        }\n      }\n    },\n    \"xAxis\": {\n      \"description\": \"location of x-axis\",\n      \"enum\": [\"bottom\", \"top\", \"center\", \"none\", \"zero\"]\n    },\n    \"yAxis\": {\n      \"description\": \"location of y-axis\",\n      \"enum\": [\"left\", \"right\", \"center\", \"none\", \"zero\"]\n    },\n    \"tracks\": {\n      \"description\": \"A track is a map from the data to a sequence of marks\",\n      \"type\": \"array\",\n      \"items\": { \"$ref\": \"/track\" }\n    },\n    \"defaultData\": {\n      \"description\": \"A string of a csv href containing data or an object of inline data where each key is a column of values\",\n      \"examples\": [\n        \"http://example.com/data.csv\",\n        {\n          \"day\": [1, 2],\n          \"price\": [10, 20]\n        }\n      ],\n      \"type\": [\"string\", \"object\"],\n      \"additionalProperties\": { \"type\": \"array\" },\n      \"minProperties\": 1\n    },\n    \"width\": {\n      \"description\": \"Width of the visualization in css units\",\n      \"examples\": [\"400px\", \"100%\", \"10em\", \"600\"],\n      \"type\": \"string\"\n    },\n    \"height\": {\n      \"description\": \"Height of the visualization in css units\",\n      \"examples\": [\"400px\", \"100%\", \"10em\", \"600\"],\n      \"type\": \"string\"\n    },\n    \"margins\": {\n      \"description\": \"Margins for the visualization; gives more space for labels and axis to render\",\n      \"properties\": {\n        \"top\": {\n          \"description\": \"Top margin of the visualization in css units\",\n          \"type\": \"string\",\n          \"examples\": [\"100px\", \"5%\", \"5em\"]\n        },\n        \"bottom\": {\n          \"description\": \"Bottom margin of the visualization in css units\",\n          \"type\": \"string\",\n          \"examples\": [\"100px\", \"5%\", \"5em\"]\n        },\n        \"left\": {\n          \"description\": \"Left margin of the visualization in css units\",\n          \"type\": \"string\",\n          \"examples\": [\"100px\", \"5%\", \"5em\"]\n        },\n        \"right\": {\n          \"description\": \"Right margin of the visualization in css units\",\n          \"type\": \"string\",\n          \"examples\": [\"100px\", \"5%\", \"5em\"]\n        }\n      }\n    }\n  },\n\n  \"allOf\": [\n    {\n      \"description\": \"if there is no default data for the visualization require each track to have data property\",\n      \"if\": {\n        \"not\": { \"required\": [\"defaultData\"] }\n      },\n      \"then\": {\n        \"properties\": {\n          \"tracks\": {\n            \"items\": {\n              \"required\": [\"data\"]\n            }\n          }\n        }\n      },\n      \"else\": {}\n    }\n  ]\n}\n","{\n  \"schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"id\": \"/track\",\n  \"title\": \"Track\",\n  \"description\": \"A track to visualize\",\n  \"type\": \"object\",\n  \"required\": [\"mark\", \"x\", \"y\"],\n  \"properties\": {\n    \"data\": {\n      \"description\": \"A string of a csv href containing data or an object of inline data where each key is an array of a data column\",\n      \"type\": [\"string\", \"object\"],\n      \"additionalProperties\": { \"type\": \"array\" },\n      \"minProperties\": 1\n    },\n    \"mark\": {\n      \"description\": \"type of mark to visualize\",\n      \"enum\": [\"point\", \"line\", \"area\", \"rect\", \"tick\", \"arc\"]\n    },\n    \"tooltips\": {\n      \"description\": \"a number between 0 and 1 where 0 is no tooltips, 1 is always show, and, for example, 0.1 would be show tooltips when zoomed in to 10% of the domain\",\n      \"type\": \"number\",\n      \"minimum\": 0,\n      \"maximum\": 1\n    },\n    \"x\": {\n      \"description\": \"define the x coordinates of the marks\",\n      \"type\": \"object\",\n      \"allOf\": [{ \"$ref\": \"/channel\" }],\n      \"examples\": [\n        {\n          \"type\": \"genomic\",\n          \"chrAttribute\": \"chr\",\n          \"geneAttribute\": \"gene\",\n          \"domain\": [\"chr2:100\", \"chr2:300\"]\n        }\n      ]\n    },\n    \"y\": {\n      \"description\": \"define the y coordinates of the marks\",\n      \"type\": \"object\",\n      \"allOf\": [{ \"$ref\": \"/channel\" }],\n      \"examples\": [\n        {\n          \"type\": \"quantitative\",\n          \"attribute\": \"time\",\n          \"domain\": [0, 10]\n        },\n        {\n          \"attribute\": \"sample\",\n          \"type\": \"categorical\",\n          \"cardinality\": 10\n        }\n      ]\n    },\n    \"color\": {\n      \"description\": \"define the color of the marks, for fixed values can be any css3 color descriptor or a number that translates to a color in hex\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"colorScheme\": {\n          \"description\": \"d3 continuous color scheme to use, see d3-scale-chromatic for options\",\n          \"examples\": [\n            \"interpolateBlues\",\n            \"interpolateReds\",\n            \"interpolateRainbow\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"value\": \"red\"\n        },\n        {\n          \"value\": 16581375\n        },\n        {\n          \"attribute\": \"sample\",\n          \"type\": \"categorical\",\n          \"cardinality\": 10,\n          \"colorScheme\": \"interpolateBuGn\"\n        }\n      ],\n      \"allOf\": [{ \"$ref\": \"/channel\" }]\n    },\n    \"size\": {\n      \"description\": \"size of the mark, used only when mark type is point, use width or height for other mark types. The units of this channel correspond to 1/200th of the canvas e.g. a size of 100 is half the canvas.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"maxSize\": {\n          \"type\": \"number\"\n        },\n        \"minSize\": {\n          \"type\": \"number\"\n        },\n        \"value\": {\n          \"type\": \"number\"\n        }\n      },\n      \"examples\": [\n        {\n          \"attribute\": \"population\",\n          \"type\": \"quantitative\",\n          \"domain\": [0, 1000],\n          \"maxSize\": 10,\n          \"minSize\": 1\n        }\n      ],\n      \"allOf\": [{ \"$ref\": \"/channel\" }]\n    },\n    \"width\": {\n      \"description\": \"width of the mark, used for rect, arc, and tick marks only. The units of this channel correspond to 1/200th of the width of the canvas. This channel may be a genomic range type for arc tracks. If both height and width are specified for a tick mark, only width is used.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"maxWidth\": {\n          \"type\": \"number\"\n        },\n        \"minWidth\": {\n          \"type\": \"number\"\n        },\n        \"value\": {\n          \"type\": \"number\"\n        }\n      },\n      \"allOf\": [{ \"$ref\": \"/channel\" }]\n    },\n    \"height\": {\n      \"description\": \"height of the mark, used for rect, arc, and tick marks only. The units of this channel correspond to 1/200th of the height of the canvas. This channel may be a genomic range type for arc tracks.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"maxHeight\": {\n          \"type\": \"number\"\n        },\n        \"minHeight\": {\n          \"type\": \"number\"\n        },\n        \"value\": {\n          \"type\": \"number\"\n        }\n      },\n      \"allOf\": [{ \"$ref\": \"/channel\" }]\n    },\n    \"opacity\": {\n      \"description\": \"opacity of the mark, compatible with all mark types\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"minOpacity\": {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"exclusiveMaximum\": 1\n        },\n        \"value\": {\n          \"type\": \"number\"\n        }\n      },\n      \"allOf\": [{ \"$ref\": \"/channel\" }]\n    },\n    \"shape\": {\n      \"description\": \"shape of the mark, used only for point marks\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"value\": {\n          \"enum\": [\"dot\", \"circle\", \"diamond\", \"triangle\"]\n        }\n      },\n      \"allOf\": [{ \"$ref\": \"/channel\" }]\n    }\n  }\n}\n","{\n  \"schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"id\": \"/channel\",\n  \"title\": \"Channel\",\n  \"description\": \"A channel of a visualization\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"description\": \"type of attribute, genomic range only compatible with x, y, width and height\",\n      \"enum\": [\n        \"quantitative\",\n        \"categorical\",\n        \"genomic\",\n        \"genomicRange\",\n        \"inline\"\n      ]\n    },\n    \"attribute\": {\n      \"description\": \"column of data frame to use for mapping channel\",\n      \"type\": \"string\"\n    },\n    \"value\": {\n      \"description\": \"if fixing a channel, specify with value\",\n      \"type\": [\"string\", \"number\", \"boolean\"]\n    },\n    \"domain\": {\n      \"description\": \"domain of attribute to use for mapping, required if type is quantitative\",\n      \"type\": \"array\"\n    },\n    \"cardinality\": {\n      \"description\": \"number of attribute values to use for mapping, required if type is categorical\",\n      \"type\": \"integer\"\n    },\n    \"chrAttribute\": {\n      \"description\": \"if type is genomic or genomicRange, the attribute that contains the chromosome id\",\n      \"type\": \"string\"\n    },\n    \"startAttribute\": {\n      \"description\": \"if type is genomicRange, the attribute that contains the start of the range\",\n      \"type\": \"string\"\n    },\n    \"endAttribute\": {\n      \"description\": \"if type is genomicRange, the attribute that contains the end of the range\",\n      \"type\": \"string\"\n    },\n    \"genome\": {\n      \"description\": \"genome being mapped\",\n      \"enum\": [\"hg38\", \"hg19\", \"mm39\"]\n    }\n  },\n  \"allOf\": [\n    {\n      \"description\": \"If type is genomic, require genomic attributes and forbid regular attributes\",\n      \"anyOf\": [\n        {\n          \"not\": {\n            \"properties\": { \"type\": { \"const\": \"genomic\" } },\n            \"required\": [\"type\"]\n          }\n        },\n        {\n          \"required\": [\"chrAttribute\", \"geneAttribute\", \"genome\"],\n          \"not\": {\n            \"required\": [\"attribute\", \"startAttribute\", \"endAttribute\"]\n          },\n          \"properties\": {\n            \"domain\": {\n              \"items\": [\n                { \"type\": \"string\", \"pattern\": \"chr(\\\\d{1,2}|[XY]):\\\\d+\" },\n                { \"type\": \"string\", \"pattern\": \"chr(\\\\d{1,2}|[XY]):\\\\d+\" }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"description\": \"If type is genomicRange, require genomicRange attributes and forbid regular attribute\",\n      \"anyOf\": [\n        {\n          \"not\": {\n            \"properties\": { \"type\": { \"const\": \"genomicRange\" } },\n            \"required\": [\"type\"]\n          }\n        },\n        {\n          \"required\": [\n            \"chrAttribute\",\n            \"startAttribute\",\n            \"endAttribute\",\n            \"genome\"\n          ],\n          \"not\": { \"required\": [\"attribute\", \"geneAttribute\"] },\n          \"properties\": {\n            \"domain\": {\n              \"items\": [\n                { \"type\": \"string\", \"pattern\": \"chr(\\\\d{1,2}|[XY]):\\\\d+\" },\n                { \"type\": \"string\", \"pattern\": \"chr(\\\\d{1,2}|[XY]):\\\\d+\" }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"description\": \"If type is quantitative, require domain and forbid cardinality\",\n      \"anyOf\": [\n        {\n          \"not\": {\n            \"properties\": { \"type\": { \"const\": \"quantitative\" } },\n            \"required\": [\"type\"]\n          }\n        },\n        {\n          \"required\": [\"domain\"],\n          \"properties\": {\n            \"domain\": {\n              \"items\": [{ \"type\": \"number\" }, { \"type\": \"number\" }]\n            }\n          },\n          \"not\": {\n            \"required\": [\"cardinality\"]\n          }\n        }\n      ]\n    },\n\n    {\n      \"description\": \"If type is categorical, require cardinality and forbid domain\",\n      \"anyOf\": [\n        {\n          \"not\": {\n            \"properties\": { \"type\": { \"const\": \"categorical\" } },\n            \"required\": [\"type\"]\n          }\n        },\n        {\n          \"required\": [\"cardinality\"],\n          \"not\": {\n            \"required\": [\"domain\"]\n          }\n        }\n      ]\n    },\n\n    {\n      \"description\": \"If value is defined, disallow other attributes\",\n      \"anyOf\": [\n        {\n          \"not\": {\n            \"properties\": { \"value\": { \"not\": { \"type\": \"null\" } } },\n            \"required\": [\"value\"]\n          }\n        },\n        {\n          \"allOf\": [\n            {\n              \"not\": { \"required\": [\"attribute\"] }\n            },\n            {\n              \"not\": { \"required\": [\"type\"] }\n            },\n            {\n              \"not\": { \"required\": [\"domain\"] }\n            },\n            {\n              \"not\": { \"required\": [\"cardinality\"] }\n            }\n          ]\n        }\n      ]\n    },\n\n    {\n      \"description\": \"If value is not defined, require attribute or genomic attributes\",\n      \"anyOf\": [\n        {\n          \"not\": {\n            \"properties\": { \"value\": { \"type\": \"null\" } }\n          }\n        },\n        {\n          \"oneOf\": [\n            {\n              \"required\": [\"attribute\"]\n            },\n            {\n              \"required\": [\"chrAttribute\", \"genome\"]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n"],"names":[],"version":3,"file":"main.js.map"}