{"mappings":"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","sources":["src/epiviz.gl/data-processor-worker.js","src/epiviz.gl/data-processor.js","src/epiviz.gl/geometry-mapper.js"],"sourcesContent":["/**\n * The data processor worker is meant to be an interface between the main thread\n * containing the {@link WebGLVis} a {@link DataProcessor}. It's main purpose\n * is to receive messages from the WebGLVis, call the appropriate method of\n * the DataProcessor, then post a message of the results of the method back to\n * the WebGLVis.\n */\n\nimport DataProcessor from \"./data-processor\";\n\nself.onmessage = (message) => {\n  switch (message.data.type) {\n    case \"init\":\n      self.processor = new DataProcessor(message.data.specification);\n      break;\n    case \"selectBox\":\n      postMessage({\n        type: message.data.type,\n        selection: self.processor.selectBox(message.data.points),\n        bounds: message.data.points,\n      });\n      break;\n    case \"selectLasso\":\n      postMessage({\n        type: message.data.type,\n        selection: self.processor.selectLasso(message.data.points),\n        bounds: message.data.points,\n      });\n      break;\n    case \"getClosestPoint\":\n      postMessage({\n        type: message.data.type,\n        point: self.processor.getClosestPoint(message.data.point),\n      });\n      break;\n    default:\n      console.error(`Received unknown message type: ${message.type}`);\n  }\n};\n","import SpecificationProcessor from \"./specification-processor\";\n\nimport Flatbush from \"flatbush\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { polygon } from \"@turf/helpers\";\nimport simplify from \"@turf/simplify\";\nimport GeometryMapper from \"./geometry-mapper\";\n\nclass DataProcessor {\n  /**\n   * A class meant to handle processing of data used in the scatterplot.\n   *\n   * @param {Array} data the processor is meant to handle and index\n   */\n  constructor(specification) {\n    this.specification = specification;\n\n    console.log(\"Loading data...\");\n\n    new SpecificationProcessor(specification, this.indexData.bind(this));\n  }\n\n  /**\n   * Callback function that occurs after the specification processor has loaded the appropriate data\n   *\n   * @param {SpecificationProcessor} specificationHelper that is built in the constructor\n   */\n  indexData(specificationHelper) {\n    let totalPoints = 0;\n\n    for (const track of specificationHelper.tracks) {\n      if (!track.hasOwnData) {\n        // index at 1 means a header needs to be skipped\n        totalPoints +=\n          track.index === 1 ? track.data.length - 1 : track.data.length;\n        break;\n      }\n    }\n    specificationHelper.tracks\n      .filter((track) => track.hasOwnData)\n      .forEach(\n        (track) =>\n          (totalPoints +=\n            track.index === 1 ? track.data.length - 1 : track.data.length)\n      );\n\n    this.index = new Flatbush(totalPoints);\n    this.data = [];\n    console.log(\"Reading data...\");\n\n    // Process the global data in the specification processor\n    if (specificationHelper.data) {\n      for (let track of specificationHelper.tracks) {\n        if (!track.hasOwnData) {\n          const geometryMapper = new GeometryMapper(specificationHelper, track);\n\n          let currentPoint = track.getNextDataPoint();\n          while (currentPoint) {\n            geometryMapper.modifyGeometry(currentPoint.geometry);\n\n            this.data[\n              this.index.add(\n                currentPoint.geometry.coordinates[0],\n                currentPoint.geometry.coordinates[1],\n                currentPoint.geometry.coordinates[0] +\n                  currentPoint.geometry.dimensions[0],\n                currentPoint.geometry.coordinates[1] +\n                  currentPoint.geometry.dimensions[1]\n              )\n            ] = currentPoint;\n\n            currentPoint = track.getNextDataPoint();\n          }\n          break;\n        }\n      }\n    }\n\n    // Process the data that is local to each track\n    specificationHelper.tracks\n      .filter((track) => track.hasOwnData)\n      .forEach((track) => {\n        const geometryMapper = new GeometryMapper(specificationHelper, track);\n\n        let currentPoint = track.getNextDataPoint();\n        while (currentPoint) {\n          geometryMapper.modifyGeometry(currentPoint.geometry);\n\n          this.data[\n            this.index.add(\n              currentPoint.geometry.coordinates[0],\n              currentPoint.geometry.coordinates[1],\n              currentPoint.geometry.coordinates[0] +\n                currentPoint.geometry.dimensions[0],\n              currentPoint.geometry.coordinates[1] +\n                currentPoint.geometry.dimensions[1]\n            )\n          ] = currentPoint;\n\n          currentPoint = track.getNextDataPoint();\n        }\n      });\n\n    console.log(\"Indexing data...\");\n    this.index.finish();\n\n    console.log(\"Data processing complete.\");\n  }\n\n  /**\n   * Find the closest point in the data to a given point. Only finds point if it is\n   * sufficiently close.\n   *\n   * @param {Array} point of two floats to find closest point to\n   * @returns closest point or undefined\n   */\n  getClosestPoint(point) {\n    return this.data[this.index.neighbors(point[0], point[1], 1)];\n  }\n\n  /**\n   * Get points within a bounding box.\n   *\n   * @param {Array} points Bounding rectangle in the format of [x1, y1, x2, y2]\n   * @returns points in bounding box\n   */\n  selectBox(points) {\n    const smallerX = Math.min(points[0], points[2]);\n    const smallerY = Math.min(points[1], points[3]);\n    const largerX = Math.max(points[0], points[2]);\n    const largerY = Math.max(points[1], points[3]);\n\n    return this.index\n      .search(smallerX, smallerY, largerX, largerY)\n      .map((i) => this.data[i]);\n  }\n\n  /**\n   * Select points inside a given polygon. Simplify polygon with {@link @turf/simplify}\n   * which may cause precision issues with very complex polygons. Uses {@link turf}\n   * to determine what points are in polygon.\n   *\n   * @param {Array} points of a polygon to select points format: [x1,y1,x2,y2,x3,y3,...]\n   * @returns points inside lasso\n   */\n  selectLasso(points) {\n    let smallestX = Number.POSITIVE_INFINITY;\n    let largestX = Number.NEGATIVE_INFINITY;\n    let smallestY = Number.POSITIVE_INFINITY;\n    let largestY = Number.NEGATIVE_INFINITY;\n    const polygonPoints = [];\n    for (let i = 0; i < points.length; i += 2) {\n      if (points[i] < smallestX) smallestX = points[i];\n      if (points[i] > largestX) largestX = points[i];\n      if (points[i + 1] < smallestY) smallestY = points[i + 1];\n      if (points[i + 1] > largestY) largestY = points[i + 1];\n      polygonPoints.push([points[i], points[i + 1]]);\n    }\n\n    polygonPoints.push([...polygonPoints[0]]); // First and last must be same position\n\n    const candidatePoints = this.selectBox([\n      smallestX,\n      smallestY,\n      largestX,\n      largestY,\n    ]);\n\n    const boundingPolygon = polygon([polygonPoints]);\n\n    const simplifiedBoundingPolygon = simplify(boundingPolygon, {\n      tolerance: 0.01,\n      highQuality: false,\n    });\n\n    return candidatePoints.filter((point) => {\n      return booleanPointInPolygon(\n        point.geometry.coordinates,\n        simplifiedBoundingPolygon\n      );\n    });\n  }\n}\n\nexport default DataProcessor;\n","import {\n  SIZE_UNITS,\n  transformGenomicRangeToStandard,\n  transformGenomicRangeArcToStandard,\n} from \"./vertex-calculator\";\nimport { getViewportForSpecification } from \"./utilities\";\n\nclass GeometryMapper {\n  /**\n   * A class meant to modify data points from the getNextDataPoint method of the {@link Track} object\n   * to geometries that coincide with their visibility on the canvas i.e. with a proper width, height,\n   * x and y. This class is NOT meant to be used by the WebGLDrawer for rendering. It is solely used\n   * by the DataProcessor to properly index the data.\n   *\n   * @param {SpecificationProcessor} specificationObject of the visualization for these geometries\n   * @param {Track} trackObject containing track info for track that these geometries are a part of\n   */\n  constructor(specificationObject, trackObject) {\n    this.specificationObject = specificationObject;\n    this.trackObject = trackObject;\n    this.track = trackObject.track;\n    this.xScale = this.specificationObject.xScale;\n    this.yScale = this.specificationObject.yScale;\n\n    const viewportForSpecification = getViewportForSpecification(\n      specificationObject.specification\n    );\n    if (specificationObject.xScale.isGenomeScale) {\n      this.xDomainWidth = 2 / 2;\n    } else {\n      this.xDomainWidth =\n        (viewportForSpecification[1] - viewportForSpecification[0]) / 2;\n    }\n\n    if (specificationObject.yScale.isGenomeScale) {\n      this.yDomainHeight = 2 / 2;\n    } else {\n      this.yDomainHeight =\n        (viewportForSpecification[3] - viewportForSpecification[2]) / 2;\n    }\n  }\n\n  /**\n   * Modifies a geometry object in place based on the specification.\n   *\n   * @param {Object} geometry an object of the form {dimensions: Array(2), coordinates: Array(2)}\n   */\n  modifyGeometry(geometry) {\n    if (this.xScale.isGenomeScale) {\n      // transforms x part into a standard format\n      if (this.trackObject.track.x.type === \"genomicRange\") {\n        this._modifyGenomicRangeX(geometry);\n      }\n      geometry.coordinates[0] = this.xScale(geometry.coordinates[0]);\n    }\n    this._modifyStandardX(geometry);\n\n    if (this.yScale.isGenomeScale) {\n      // transforms y part into a standard format\n      if (this.trackObject.track.y.type === \"genomicRange\") {\n        this._modifyGenomicRangeY(geometry);\n      }\n      geometry.coordinates[1] = this.yScale(geometry.coordinates[1]);\n    }\n    this._modifyStandardY(geometry);\n  }\n\n  _modifyStandardX(geometry) {\n    if (geometry.dimensions[0]) {\n      // Transform width from the data point into visible width on the canvas\n      geometry.dimensions[0] *= this.xDomainWidth * SIZE_UNITS;\n    }\n\n    // If there is no width, give very small width for flatbush indexing\n    geometry.dimensions[0] = geometry.dimensions[0] || 1e-10;\n  }\n\n  _modifyStandardY(geometry) {\n    if (geometry.dimensions[1]) {\n      // Transform height from the data point into visible height on the canvas\n      geometry.dimensions[1] *= this.yDomainHeight * SIZE_UNITS;\n    }\n\n    // If there is no height, give very small height for flatbush indexing\n    geometry.dimensions[1] = geometry.dimensions[1] || 1e-10;\n  }\n\n  _modifyGenomicRangeX(geometry) {\n    if (this.trackObject.track.mark === \"arc\") {\n      /**\n       * Geometry is in the form\n       * {\n       *   coordinates: [[[chr1,gene1], [chr2,gene2]], <y-coord handled in _modifyGenomicRangeY>]\n       *   dimensions: [[[chr3,gene3], [chr3,gene3]], <height handled in _modifyGenomicRangeY>]\n       * }\n       *\n       * and is transformed to\n       * {\n       *   coordinates: [x-coord between -1 and 1, <y handled elsewhere>]\n       *   dimensions: [width, <height handled elsewhere>]\n       * }\n       */\n      const standardized = transformGenomicRangeArcToStandard(\n        {\n          x: geometry.coordinates[0],\n          y: 0,\n          width: geometry.dimensions[0],\n          height: 0,\n        },\n        this.specificationObject.xScale,\n        this.specificationObject.yScale\n      );\n\n      geometry.coordinates[0] = standardized.x;\n      geometry.dimensions[0] = standardized.width;\n    } else {\n      /**\n       * Geometry is in the form\n       * {\n       *   coordinates: [[[chr1,gene1], [chr2,gene2]], <y-coord handled in _modifyGenomicRangeY>]\n       *   dimensions: [<ignored value>, <height handled elsewhere>]\n       * }\n       *\n       * and is transformed to\n       * {\n       *   coordinates: [x-coord between -1 and 1, <y handled elsewhere>]\n       *   dimensions: [width, <height handled elsewhere>]\n       * }\n       */\n\n      const standardized = transformGenomicRangeToStandard(\n        {\n          x: geometry.coordinates[0],\n          y: 0,\n        },\n        this.specificationObject.xScale,\n        this.specificationObject.yScale\n      );\n      geometry.coordinates[0] = standardized.x;\n      geometry.dimensions[0] = standardized.width;\n    }\n  }\n\n  _modifyGenomicRangeY(geometry) {\n    // See comments in _modifyGenomicRangeX\n\n    if (this.trackObject.track.mark === \"arc\") {\n      const standardized = transformGenomicRangeArcToStandard(\n        {\n          x: 0,\n          y: geometry.coordinates[1],\n          width: 0,\n          height: geometry.coordinates[1],\n        },\n        this.specificationObject.xScale,\n        this.specificationObject.yScale\n      );\n\n      geometry.coordinates[1] = standardized.y;\n      geometry.dimensions[1] = standardized.height;\n    } else {\n      const standardized = transformGenomicRangeToStandard(\n        {\n          x: 0,\n          y: geometry.coordinates[1],\n        },\n        this.specificationObject.xScale,\n        this.specificationObject.yScale\n      );\n      geometry.coordinates[1] = standardized.y;\n      geometry.dimensions[1] = standardized.height;\n    }\n  }\n}\n\nexport default GeometryMapper;\n"],"names":[],"version":3,"file":"data-processor-worker.f54163b0.js.map"}